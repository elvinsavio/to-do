package template

import (
	types "elvinsavio/todo/types"
	Base "elvinsavio/todo/templates/pages/base"
	Components "elvinsavio/todo/templates/components"
	Container "elvinsavio/todo/templates/components/container"
	Typography "elvinsavio/todo/templates/components/typography"
	List "elvinsavio/todo/templates/components/list"
)

templ Landing(projects []types.ProjectList) {
	@Base.Base() {
		<div class="h-screen flex justify-center items-center min-w-[300px]">
			@Components.Card("flex-row") {
				@Container.Box() {
					@Typography.Heading() {
						Welcome to your project managment
					}
					@Typography.SubHeading() {
						Kanban board for your projects
					}
					@Container.Box() {
						@Typography.Paragraph() {
							<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24"><path fill="currentColor" d="M5.55 19L2 15.45l1.4-1.4l2.125 2.125l4.25-4.25l1.4 1.425zm0-8L2 7.45l1.4-1.4l2.125 2.125l4.25-4.25l1.4 1.425zM13 17v-2h9v2zm0-8V7h9v2z"></path></svg> Create a 
							@Typography.Link("/new") {
								new
							}
							project 
						}
					}
				}
				@Components.Divider("verticle")
				@Container.Box() {
					@Typography.SubHeading() {
						<svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24"><path fill="currentColor" d="M4 20q-.825 0-1.412-.587T2 18V6q0-.825.588-1.412T4 4h6l2 2h8q.825 0 1.413.588T22 8H4v10l2.4-8h17.1l-2.575 8.575q-.2.65-.737 1.038T19 20z"></path></svg> Recent.
					}
					@Container.Box() {
						if len(projects) == 0 {
							@Typography.Paragraph() {
								No project found...
							}
							@Typography.Paragraph() {
								Create a
								@Typography.Link("/new") {
									new
								}
								project
							}
						} else {
							@List.List() {
								for _, item := range projects {
									@List.ListItem() {
										@Typography.Link("project/" + item.Path + "/") {
											{ item.Name }
										}
									}
								}
							}
						}
					}
				}
			}
		</div>
	}
}
